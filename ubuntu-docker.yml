---
- name: Capture original user
  hosts: all
  become: false
  gather_facts: true
  tasks:
    - name: Store original user
      set_fact:
        original_ssh_user: "{{ ansible_user_id }}"
      delegate_to: localhost
      delegate_facts: true

- name: Install Docker
  hosts: device
  become: true

  vars:
    docker_users:
      - "{{ hostvars['localhost']['original_ssh_user'] }}"

  tasks:
    - name: Remove older Docker packages
      apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - podman-docker
          - containerd
          - runc
        state: absent

    - name: Install prerequisites
      apt:
        name:
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: yes

    - name: Create keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: Add Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      args:
        creates: /etc/apt/keyrings/docker.gpg

    - name: Set permissions on GPG key
      file:
        path: /etc/apt/keyrings/docker.gpg
        mode: "0644"

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Add users to Docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ docker_users }}"

    - name: Enable Docker services
      systemd:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - containerd.service
        - docker.service

    - name: Verify Docker installation
      command: docker --version
      register: docker_version
      changed_when: false

    - name: Display Docker version
      debug:
        var: docker_version.stdout
